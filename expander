--[[

Open source
Made by siglver  
Credits to me

Credits to brice and jules 

]]

local CoreGui = game:GetService("StarterGui")
local Players = game:GetService("Players")

local function isNumber(str)
    if tonumber(str) ~= nil or str == 'inf' then
        return true
    end
end

getgenv().HitboxSize = 15
getgenv().HitboxTransparency = 0.9

getgenv().HitboxStatus = false
getgenv().TeamCheck = false

getgenv().Walkspeed = game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed
getgenv().Jumppower = game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower

getgenv().TPSpeed = 3
getgenv().TPWalk = false

--// UI

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Vcsk/UI-Library/main/Source/MyUILib(Unamed).lua"))();
local Window = Library:Create("Jules|Brice Expander")

local ToggleGui = Instance.new("ScreenGui")
local Toggle = Instance.new("TextButton")

ToggleGui.Name = "ToggleGui_HE"
ToggleGui.Parent = game.CoreGui

Toggle.Name = "Toggle"
Toggle.Parent = ToggleGui
Toggle.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
Toggle.BackgroundTransparency = 0.660
Toggle.Position = UDim2.new(0, 0, 0.454706937, 0)
Toggle.Size = UDim2.new(0.0650164187, 0, 0.0888099447, 0)
Toggle.Font = Enum.Font.SourceSans
Toggle.Text = "" -- Botão sem texto
Toggle.TextScaled = true
Toggle.TextColor3 = Color3.fromRGB(40, 40, 40)
Toggle.TextSize = 24.000
Toggle.TextXAlignment = Enum.TextXAlignment.Left
Toggle.Active = true
Toggle.Draggable = true
Toggle.MouseButton1Click:connect(function()
    Library:ToggleUI()
end)

local HomeTab = Window:Tab("Início", "rbxassetid://10888331510")
local PlayerTab = Window:Tab("Jogadores", "rbxassetid://12296135476")
local UtilityTab = Window:Tab("Utilidades", "rbxassetid://15426471035")

HomeTab:InfoLabel("SCRIPT DE JULES E BRICE")

-- CONFIGURACOES --

HomeTab:Section("Configurações")

HomeTab:TextBox("Tamanho da Hitbox", function(value)
    getgenv().HitboxSize = value
end)

HomeTab:TextBox("Transparência da Hitbox", function(number)
    getgenv().HitboxTransparency = number
end)

HomeTab:Section("Principal")

HomeTab:Toggle("Ativar Hitbox", function(state)
    getgenv().HitboxStatus = state
    game:GetService('RunService').RenderStepped:connect(function()
        if HitboxStatus == true and TeamCheck == false then
            for i, v in next, game:GetService('Players'):GetPlayers() do
                if v.Name ~= game:GetService('Players').LocalPlayer.Name then
                    pcall(function()
                        v.Character.HumanoidRootPart.Size = Vector3.new(HitboxSize, HitboxSize, HitboxSize)
                        v.Character.HumanoidRootPart.Transparency = HitboxTransparency
                        v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really black")
                        v.Character.HumanoidRootPart.Material = "Neon"
                        v.Character.HumanoidRootPart.CanCollide = false
                    end)
                end
            end
        elseif HitboxStatus == true and TeamCheck == true then
            for i, v in next, game:GetService('Players'):GetPlayers() do
                if game:GetService('Players').LocalPlayer.Team ~= v.Team then
                    pcall(function()
                        v.Character.HumanoidRootPart.Size = Vector3.new(HitboxSize, HitboxSize, HitboxSize)
                        v.Character.HumanoidRootPart.Transparency = HitboxTransparency
                        v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really black")
                        v.Character.HumanoidRootPart.Material = "Neon"
                        v.Character.HumanoidRootPart.CanCollide = false
                    end)
                end
            end
        else
            for i, v in next, game:GetService('Players'):GetPlayers() do
                if v.Name ~= game:GetService('Players').LocalPlayer.Name then
                    pcall(function()
                        v.Character.HumanoidRootPart.Size = Vector3.new(2, 2, 1)
                        v.Character.HumanoidRootPart.Transparency = 1
                        v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Medium stone grey")
                        v.Character.HumanoidRootPart.Material = "Plastic"
                        v.Character.HumanoidRootPart.CanCollide = false
                    end)
                end
            end
        end
    end)
end)

HomeTab:Keybind("Esconder UI", Enum.KeyCode.F, function()
    Library:ToggleUI()
end)

PlayerTab:TextBox("Velocidade", function(value)
    getgenv().Walkspeed = value
    pcall(function()
        game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = value
    end)
end)

PlayerTab:Toggle("Ativar Pulo Infinito", function(state)
    getgenv().InfJ = state
    game:GetService("UserInputService").JumpRequest:connect(function()
        if InfJ == true then
            game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
        end
    end)
end)

PlayerTab:Toggle("Super Velocidade", function(s)
    getgenv().TPWalk = s
    local hb = game:GetService("RunService").Heartbeat
    local player = game:GetService("Players")
    local lplr = player.LocalPlayer
    local chr = lplr.Character
    local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
    while getgenv().TPWalk and hb:Wait() and chr and hum and hum.Parent do
        if hum.MoveDirection.Magnitude > 0 then
            if getgenv().TPSpeed and isNumber(getgenv().TPSpeed) then
                chr:TranslateBy(hum.MoveDirection * tonumber(getgenv().TPSpeed))
            else
                chr:TranslateBy(hum.MoveDirection)
            end
        end
    end
end)

UtilityTab:Section("Utilidades")

UtilityTab:Button("Usar Void", function()
    local player = game.Players.LocalPlayer
    local character = player.Character
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    
    local maxDistance = 2147483647 * math.sqrt(3) / 2
    rootPart.CFrame = CFrame.new(maxDistance, 0, 0)
end)
